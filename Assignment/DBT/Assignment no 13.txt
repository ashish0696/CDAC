1) Create a union of two queries that shows the names, cities, and ratings of all customers. Those with rating of 200 or greater will also have the words “High Rating”, while the others will have the words “Low Rating”.

mysql> select cname,city,rating, 'High rating' as HR from customers
    -> where rating >= 200
    -> union all
    -> select cname,city,rating, 'Low rating' as LR from customers
    -> where rating < 200;
+----------+----------+--------+-------------+
| cname    | city     | rating | HR          |
+----------+----------+--------+-------------+
| Giovanni | Rome     |    200 | High rating |
| Liu      | San Jose |    200 | High rating |
| Grass    | Berlin   |    300 | High rating |
| Cisneros | San Jose |    300 | High rating |
| Hoffman  | London   |    100 | Low rating  |
| Clemens  | London   |    100 | Low rating  |
| Pereira  | Rome     |    100 | Low rating  |
+----------+----------+--------+-------------+



2) Write a command that produces the name and number of each salesperson and each customer with more than one current order. Put the results in alphabetical order.




select salespeople.sname as Name,salespeople.snum as Num from salespeople
    join orders on orders.snum = salespeople.snum
    group by salespeople.sname,salespeople.snum
    having count(orders.onum) >1
    union
    select customers.cname as Name,customers.cnum as Num from customers
    join orders on orders.cnum = customers.cnum
    group by customers.cname,customers.cnum
    having count(orders.onum) >1
    order by Name;



+----------+------+
| Name     | Num  |
+----------+------+
| Cisneros | 2008 |
| Clemens  | 2006 |
| Grass    | 2004 |
| Peel     | 1001 |
| Rifkin   | 1007 |
| Serres   | 1002 |
+----------+------+








3) Form a union of three queries. Have the first select the snums of all salespeople in San Jose; the second, the cnums of all customers in San Jose;
 and the third the onums of all orders on October 3. 
 Retain duplicates between the last two queries but eliminate any redundancies between either of them and the first.
(Note: in the sample tables as given, there would be no such redundancy. This is besides the point.)

mysql> select snum as Num from salespeople where city = 'San Jose'
    -> union
    -> (select cnum as Num from customers where city = 'San Jose'
    -> union all
    -> select onum as Num from orders where odate = '1990-10-03');
+------+
| Num  |
+------+
| 1002 |
| 2003 |
| 2008 |
| 3001 |
| 3003 |
| 3002 |
| 3005 |
| 3006 |
+------+











select snum as Num from salespeople where city = 'San Jose'
union
(select cnum as Num from customers where city = 'San Jose'
union all 
select onum as Num from orders where odate = '1990-10-03');
